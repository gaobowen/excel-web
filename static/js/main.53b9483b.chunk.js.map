{"version":3,"sources":["static/images/login/github.svg","static/images/login/main-bg.png","static/images/login/login-input-bg.png","redux/login/action-types.js","http.js","redux/login/actions.js","components/login/github-login.jsx","components/login/ding-qrcode-login.jsx","components/login/ddlogin.jsx","components/login/login-view.jsx","components/login/main-login.jsx","redux/workplace/actions.js","redux/workplace/action-types.js","components/workplace/excel-sheet.jsx","components/workplace/user-header.jsx","components/workplace/tools-header.jsx","components/workplace/tools-footer.jsx","components/workplace/main-workplace.jsx","App.js","serviceWorker.js","redux/login/reducers.js","redux/workplace/reducers.js","redux/workplace/reducers-grid-datas.js","redux/store.js","index.js"],"names":["module","exports","DINGDING_LOGIN","GITHUB_LOGIN","USER_LOGOUT","RECEIVE_USER_INFO","httpApi","postDinging","params","Promise","resolve","reject","cookie","remove","path","setTimeout","retobj","userInfo","errcode","username","avatarUrl","save","window","btoa","JSON","stringify","getGithub","a","axios","get","resp","undefined","data","login","avatar_url","message","error","receiveUserInfo","type","GithubLogin","props","loginGithub","userName","handleChange","event","target","value","style","width","height","src","githubimg","size","className","placeholder","onChange","this","onPressEnter","onClick","React","Component","connect","state","dispatch","ret","DingQrcodeLogin","createSrc","options","goto","href","url","encodeURIComponent","iframeOption","id","frameBorder","allowtransparency","scrolling","defaultProps","DDLogin","APPID","REDIRECT_URI","location","search","indexOf","keyvalues","replace","split","kv","index","length","pairs","toString","console","log","loginDingding","handleMessage","loginTempCode","origin","open","encodeURI","addEventListener","attachEvent","opacity","LoginView","changeLoginMode","loginMode","history","setState","pathname","key","component","to","withRouter","MainLogin","loginCookie","load","jstr","atob","parse","bgimg","alt","loginviewbgimg","changedExcelSize","changeExcelSheetSelected","ExcelSheet","getCoordinates","positionStr","row","match","col","colstr","baseCode","charCodeAt","colno","charIdx","Math","pow","x","y","parseInt","getPositionStr","coordinates","x1","String","fromCharCode","getPositionStrX","inputX","grid","gridDatas","dic","selectedKey","totalWidth","totalHeight","excelSheet","valueRenderer","cell","onContextMenu","e","i","j","readOnly","preventDefault","onCellsChanged","changes","map","forEach","render","UserHeader","download","downloadExcel","handleMenuClick","logout","host","downMenu","Item","overlay","icon","ToolsHeader","iconbtn","TabPane","ToolsFooter","activeKey","onEdit","targetKey","action","add","addExcelSheet","removeExcelSheet","newTabIndex","dickey","panes","push","title","name","content","pane","tab","changeExcelSheetName","MainWorkplace","App","Boolean","hostname","initState","initSize","creatBlankGridData","isTest","initGrid","coor","wb","Excel","Workbook","ws","addWorksheet","properties","defaultRowHeight","rowcount","colcount","rowidx","colidx","getRow","rowdata","Array","fill","addRow","getCell","xlsx","writeBuffer","then","buffer","FileSaver","saveAs","Blob","Date","now","catch","err","getStamp","getTime","random","blankData","key1","initGridDatas","addstate","nameidx","asKey","addkey","rmdic","wouldSelect","hasRemove","changeState","selectedState","createStore","combineReducers","applyMiddleware","thunk","ReactDOM","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.53b9483b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github.741c0ae1.svg\";","module.exports = __webpack_public_path__ + \"static/media/main-bg.197637b0.png\";","module.exports = __webpack_public_path__ + \"static/media/login-input-bg.cf01c34c.png\";","export const DINGDING_LOGIN = 'DINGDING_LOGIN';\nexport const GITHUB_LOGIN = 'GITHUB_LOGIN';\nexport const USER_LOGOUT = 'USER_LOGOUT';\nexport const RECEIVE_USER_INFO = 'RECEIVE_USER_INFO';\n\n\n","import axios from 'axios';\nimport cookie from 'react-cookies'\nimport { message } from 'antd';\n\nlet httpApi = {};\n\nlet dingurl = 'https://oapi.dingtalk.com/sns/getuserinfo_bycode?accessKey=dingoauctaoft7kia4pdvx';\n\nhttpApi.postDinging = (params) => {\n    //(axios.post(dingurl,{})) 此api需要服务端完成，这里用timeout模拟\n    return new Promise((resolve, reject) => {\n        cookie.remove('loginCookie', { path: '/' })\n        setTimeout(() => {\n            let retobj = {\n                    userInfo: {\n                        errcode: 0,\n                        username: 'DingUser',\n                        avatarUrl: 'https://gtms03.alicdn.com/tps/i3/TB1opXxHXXXXXahXpXXvBLt6FXX-230-230.png'\n                    }\n                }\n                //console.log('cookie.save');\n            cookie.save('loginCookie', window.btoa(JSON.stringify(retobj)), { path: '/' });\n            resolve(retobj);\n        }, 300)\n    })\n\n};\n\nhttpApi.getGithub = async(username) => {\n    let retobj = {\n        userInfo: {\n            errcode: 0\n        }\n    };\n    try {\n        let resp = await axios.get(`https://api.github.com/users/${username}`);\n        //debugger;\n        cookie.remove('loginCookie', { path: '/' })\n        if (resp.data.login !== undefined) {\n            retobj.userInfo.username = resp.data.login;\n            retobj.userInfo.avatarUrl = resp.data.avatar_url;\n            cookie.save('loginCookie', window.btoa(JSON.stringify(retobj)), { path: '/' });\n    \n        } else {\n            message.error('User name not found.');\n            retobj.errcode = -1;\n        }\n    } catch (error) {\n        message.error('User name not found.');\n    }\n\n\n    return retobj;\n\n}\n\n\n\nexport default httpApi;","import { DINGDING_LOGIN, GITHUB_LOGIN, USER_LOGOUT, RECEIVE_USER_INFO } from './action-types';\nimport httpApi from '../../http' \n\n//import axios from 'axios'\n//import CryptoJS from 'crypto-js/crypto-js'\n//export const loginDingding = (params) => ({ type: DINGDING_LOGIN, data: params });\n\nexport const loginDingding = (params) => {\n    return async dispatch => {\n        \n        let ret = await httpApi.postDinging(params);\n        console.log(ret);\n        dispatch(receiveUserInfo({...ret}));\n            \n\n    }\n}\n\n//export const loginGithub = (params) => ({ type: GITHUB_LOGIN, data: params });\n\nexport const loginGithub = (params) => {\n    return async dispatch => {\n        let ret = await httpApi.getGithub(params)\n        //console.log(ret);\n        dispatch(receiveUserInfo({...ret}));\n    }\n}\n\nexport const logout = (params) => ({ type: USER_LOGOUT, data: params });\n\nexport const receiveUserInfo = (params) => ({ type: RECEIVE_USER_INFO, data: params })","import React from 'react';\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { loginGithub } from '../../redux/login/actions'\n\n//安装 react-app-rewired\n//安装 babel-plugin-import\"\n//安装 customize-cra\n//antd 样式按需加载的文档写漏了，还需要修改package.json文件中的启动脚本  \"start\": \"react-app-rewired start\"\nimport { Input, Button, Avatar } from 'antd'\n\nimport githubimg from '../../static/images/login/github.svg';\nimport '../../static/css/github-login.css'\n\nclass GithubLogin extends React.Component {\n  constructor(props) {\n    super(props);\n    //props 不能扩展，只能外部传入\n  }\n\n  loginGithub = () => {\n    this.props.loginGithub(this.userName);\n  }\n\n  handleChange = (event) => {\n    this.userName = event.target.value;\n  }\n\n  render() {\n    return (\n      <div style={{ width: '100%', height: '100%' }}>\n        <Avatar src={githubimg} size={64} className='login-github-svg' />\n        <div className='login-username-text'>\n          Github User Name\n        </div>\n\n        <Input className='login-username-input' placeholder='User Name' onChange={this.handleChange}\n          onPressEnter={this.loginGithub} />\n\n        <Button type=\"primary\" className='login-github-btn' onClick={this.loginGithub}>Login</Button>\n      </div>)\n  }\n}\n\nGithubLogin.propTypes = {\n  loginGithub: PropTypes.func.isRequired,\n}\n\nexport default connect(\n  state => ({ login: state.login }),\n  { loginGithub }\n)(GithubLogin)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n// https://ding-doc.dingtalk.com/doc#/serverapi3/mrugr3\nclass DingQrcodeLogin extends React.Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            url: \"https://login.dingtalk.com/login/qrcode.htm?goto=\"\n        }\n    }\n    createSrc = () => {\n        const { goto, style, href } = this.props.options\n        let src = this.state.url + encodeURIComponent(goto)\n        src += style ? \"&style=\" + style : \"\";\n        src += href ? \"&href=\" + href : \"\";\n        return src\n    }\n    render(){\n        const iframeOption = {\n            id: this.props.options.id,\n            src: this.createSrc(),\n            frameBorder: \"0\",\n            allowtransparency : \"true\",\n            scrolling: \"no\",\n            width: this.props.options.width,\n            height: this.props.options.height,\n            className: this.props.className\n        }\n        return (\n            // eslint-disable-next-line jsx-a11y/iframe-has-title\n            <iframe {...iframeOption} />\n        )\n    }\n}\n\nDingQrcodeLogin.propTypes = {\n    options: PropTypes.shape({\n        id: PropTypes.string,\n        goto: PropTypes.string.isRequired,\n        style: PropTypes.string,\n        href: PropTypes.string,\n        width: PropTypes.string,\n        height: PropTypes.string, \n    }),\n    className: PropTypes.string\n}\n\nDingQrcodeLogin.defaultProps={\n    options: {\n        id: \"login_container\",\n        goto: \"\",\n        style: \"\",\n        href: \"\",\n        width: \"350px\",\n        height: \"350px\",\n    },\n    className: ''\n}\n\nexport default DingQrcodeLogin","import React from 'react'\nimport DingQrcodeLogin from './ding-qrcode-login'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { loginDingding } from '../../redux/login/actions'\n\n\n// https://ding-doc.dingtalk.com/doc#/serverapi3/mrugr3\nclass DDLogin extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            // 测试 appid\n            APPID: 'dingoauctaoft7kia4pdvx',  \n            // 跳转页面\n            REDIRECT_URI: 'https://gaobowen.github.io/excel-web/login/dingding' //https://gaobowen.github.io/excel-web\n        }\n    }\n    componentWillMount() {\n        // 触发回调时处理回调链接,举例：如果查询字符串中含有state,且为dinglogin（可自行设置）,\n        // 则触发扫描登录的相应处理方法，比如登录。\n        if (this.props.location.search === undefined) {\n            //console.log(this.props.location)\n            return;\n        }\n        //const state = this.props.location && this.props.location.query.state;\n        if (this.props.location.search.indexOf('dinglogin') !== -1) {\n            let keyvalues = this.props.location.search.replace(\"?\", \"\").split(\"&\");\n            let kv = {};\n            for (let index = 0; index < keyvalues.length; index++) {\n                const pairs = keyvalues[index].split('=');\n                kv[pairs[0].toString()] = pairs[1];\n            }\n            //模拟获取用户数据\n            console.log('this.props.location.search.indexOf')\n            this.props.loginDingding({});\n            return;\n            //getuserinfo_bycode为服务端api 前端不支持\n            // let keyvalues = this.props.location.search.replace(\"?\", \"\").split(\"&\");\n            // let kv = {};\n            // for (let index = 0; index < keyvalues.length; index++) {\n            //     const pairs = keyvalues[index].split('=');\n            //     kv[pairs[0].toString()] = pairs[1];\n            // }\n            // console.log(kv);\n            // const code = kv.code;\n            // const timestamp = new Date().getTime().toString();\n            // let hash = CryptoJS.HmacSHA256(timestamp, \"1e2K9qeTnKJCEbQwBTiFWVZKDoEvlzgpcw2Psv3kmOguuezpbmRl2k37dMbHFaIC\");\n            // var hashInBase64 = CryptoJS.enc.Base64.stringify(hash);\n            // axios.post(`https://oapi.dingtalk.com/sns/getuserinfo_bycode?accessKey=dingoauctaoft7kia4pdvx&timestamp=${timestamp}&signature=${hashInBase64}`, {\n            //     tmp_auth_code: code,\n            // })\n            //     .then(function (response) {\n            //         console.log('resp')\n            //         console.log(response)\n            //     })\n            //     .catch(function (error) {\n            //         console.log('error')\n            //         console.log(error);\n            //     });\n            // ex: dispatch(scanLogin({tmp_auth_code: code}));\n        }\n    }\n    componentDidMount() {\n        // 监听消息处理方法\n        const handleMessage = (event) => {\n            // 获取loginTempCode\n            const loginTempCode = event.data;\n            // 获取消息来源\n            const origin = event.origin;\n            // 拼接 url\n            const url = `https://oapi.dingtalk.com/connect/oauth2/sns_authorize?appid=${this.state.APPID}&response_type=code&scope=snsapi_login&state=dinglogin&redirect_uri=${this.state.REDIRECT_URI}&loginTmpCode=${loginTempCode}`\n            // 如果来源为https://login.dingtalk.com，则在当前窗口打开回调链接\n            if (origin === 'https://login.dingtalk.com') {\n                window.open(encodeURI(url), '_parent')\n            }\n        };\n        // 监听iframe的消息\n        if (typeof window.addEventListener != 'undefined') {\n            window.addEventListener('message', handleMessage, false);\n        } else if (typeof window.attachEvent != 'undefined') {\n            window.attachEvent('onmessage', handleMessage);\n        }\n    }\n\n    //这是错误的写法，方法需要绑定，也可以使用箭头函数自动绑定\n    loginDingding() {\n        console.log('loginDingding')\n    }\n\n    render() {\n        const options = {\n            id: \"login-container\",\n            goto: `https://oapi.dingtalk.com/connect/oauth2/sns_authorize?appid=${this.state.APPID}&response_type=code&scope=snsapi_login&state=dinglogin&redirect_uri=${this.state.REDIRECT_URI}`,\n            width: '350px',\n            height: '350px',\n        }\n\n        return (\n            <div id=\"login-container\" style={{ opacity: 0.78 }}>\n                <DingQrcodeLogin options={options} />\n            </div>\n        )\n    }\n}\n\nDDLogin.propTypes = {\n    loginDingding: PropTypes.func.isRequired\n}\n\nexport default connect(\n    state => ({ login : state.login }),\n    { loginDingding }\n)(DDLogin)\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom'\nimport GithubLogin from './github-login'\nimport DDLogin from './ddlogin';\n\n//编写静态页面首先引入css\nimport '../../static/css/loginview.css'\n\n\nclass LoginView extends React.Component {\n  //PropTypes.shape 用于检测对象的不同属性的不同类型\n  static propTypes = {\n    options:\n      PropTypes.shape({\n        loginMode: PropTypes.string.isRequired,\n      }),\n  }\n\n  // 设置props默认值防止报错\n  static defaultProps = {\n    options: {\n      loginMode: 'dingding'\n    }\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      options: { loginMode: 'dingding' }\n    }\n    if(props.location !== undefined)\n    {\n      if(props.location.pathname === '/excel-web/login/github')\n      {\n        props.options.loginMode = 'github';\n      }\n      else\n      {\n        props.options.loginMode = 'dingding';\n      }\n    }\n    this.state.options.loginMode = props.options.loginMode;\n\n    \n  }\n\n  changeLoginMode = (event) => {\n    // console.log(event.target);\n    let loginMode = event.target.id === 'tab-li-github' ? 'github' : 'dingding';\n    // 使用props.history前首先使用withRoute\n    //console.log(this.props.history);\n    this.props.history.replace('/excel-web/login/' + loginMode);\n    this.setState({ options: { loginMode } });\n  }\n\n\n  render() {\n    //刷新页面后，路由与state不匹配，导致页面显示错误\n    //解决方案：\n    //1、把路由相关参数在state中剥离\n    //2、state中相关的默认参数根据路由重新负责\n    //console.log(this.props)\n\n    return (\n      <div className='login-view'>\n        {/*这里ul没有把div撑开，需要确定height*/}\n        <div className='tab-div'>\n          <ul className='tabs'>\n            {/* 这里还可以优化，使用Link或NavLink */}\n            <li id='tab-li-dingding'\n              className={this.state.options.loginMode === 'dingding' ? 'tab-item current' : 'tab-item'}\n              onClick={this.changeLoginMode}>Dingding</li>\n            <li id='tab-li-github'\n              className={this.state.options.loginMode === 'dingding' ? 'tab-item' : 'tab-item current'}\n              onClick={this.changeLoginMode}>Github</li>\n          </ul>\n        </div>\n        \n        <div className='login-view-content' key={this.props.location.key}>\n          <Switch>\n            <Route path='/excel-web/login/dingding' component={DDLogin} />\n            <Route path='/excel-web/login/github' component={GithubLogin}/>\n            <Redirect to='/excel-web/login/dingding' />\n          </Switch>\n        </div>\n      </div>\n    )\n  }\n\n\n}\n\nexport default withRouter(LoginView);","import React from 'react';\nimport LoginView from './login-view'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { receiveUserInfo } from '../../redux/login/actions'\nimport cookie from 'react-cookies'\n\nimport bgimg from '../../static/images/login/main-bg.png';\nimport loginviewbgimg from '../../static/images/login/login-input-bg.png';\nimport '../../static/css/mainlogin.css'\n\nclass MainLogin extends React.Component {\n  constructor(props) {\n    super(props);\n\n    //在正式的web应用中，通常使用浏览器缓存的cookie值作为key，向redis等缓存服务端获取session信息，\n    //进而判断用户是否需要登录。这里刷新页面后会丢失dom中登录状态，尝试用cookie base 64 存储登录信息\n    let loginCookie = cookie.load('loginCookie');\n    if (loginCookie !== undefined) {\n      var jstr = window.atob(loginCookie)\n      let login = JSON.parse(jstr);\n      if (login.userInfo.username !== undefined) {\n        this.props.receiveUserInfo(login);\n      }\n    }\n  }\n\n  receiveUserInfo(params) {\n\n  }\n\n  componentDidMount() {\n    if (this.props.userInfo.username !== undefined) {\n      this.props.history.replace('/excel-web', this.state);\n    }\n  }\n  componentDidUpdate() {\n    if (this.props.userInfo.username !== undefined) {\n      this.props.history.replace('/excel-web', this.state);\n    }\n  }\n\n  render() {\n\n    if (this.props.userInfo.username !== undefined) {\n      return (<div></div>)\n    }\n\n    return (\n      <div>\n        <div className='bgdiv'>\n          <img className='bgimg' src={bgimg} alt='loginbgimg' />\n        </div>\n        <div className='logincontainer'>\n          <div>\n            <div className='loginviewbg outradius'>\n              <img className='loginviewbgimg' src={loginviewbgimg} alt='' />\n            </div>\n            <LoginView />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nMainLogin.propTypes = {\n  userInfo: PropTypes.object.isRequired,\n  receiveUserInfo: PropTypes.func.isRequired,\n}\n\n//react diff 通过setState来更新ui，这里绑定的数据越小，ui更新的效率就越高\n//这里的state.login\nexport default connect(\n  state => ({ userInfo: state.login.userInfo }),\n  { receiveUserInfo }\n)(MainLogin)\n","import {\n    CHANGED_EXCEL_SIZE,\n    ADD_EXCEL_SHEET,\n    REMOVE_EXCEL_SHEET,\n    CHANGE_EXCEL_SHEET_NAME,\n    CHANGE_EXCEL_SHEET_SELECTED,\n    DOWNLOAD_EXCEL\n} from './action-types';\n\n\nexport const changedExcelSize = (params) => ({ type: CHANGED_EXCEL_SIZE, data: params });\n\nexport const addExcelSheet = (params) => ({ type: ADD_EXCEL_SHEET, data: params });\n\nexport const removeExcelSheet = (params) => ({ type: REMOVE_EXCEL_SHEET, data: params });\n\nexport const changeExcelSheetName = (params) => ({ type: CHANGE_EXCEL_SHEET_NAME, data: params });\n\nexport const changeExcelSheetSelected = (params) => ({ type: CHANGE_EXCEL_SHEET_SELECTED, data: params });\n\nexport const downloadExcel = (params) => ({ type: DOWNLOAD_EXCEL, data: params });","export const CHANGED_EXCEL_SIZE = 'CHANGED_EXCEL_SIZE';\n\nexport const ADD_EXCEL_SHEET = 'ADD_EXCEL_SHEET';\n\nexport const REMOVE_EXCEL_SHEET = 'REMOVE_EXCEL_SHEET';\n\nexport const CHANGE_EXCEL_SHEET_NAME = 'CHANGE_EXCEL_SHEET_NAME';\n\nexport const CHANGE_EXCEL_SHEET_SELECTED = 'CHANGE_EXCEL_SHEET_SELECTED';\n\nexport const DOWNLOAD_EXCEL = 'DOWNLOAD_EXCEL';","import React from 'react';\nimport Datasheet from 'react-datasheet';\nimport { connect } from 'react-redux'\nimport { changedExcelSize ,changeExcelSheetSelected} from '../../redux/workplace/actions'\n\nimport '../../static/css/excel-sheet.css'\n\n\n//此开源控件在每个cell上都单独处理了事件，当初始化数组达到几百上千行时，操作会延迟卡顿，\n//作为excel这种数据量比较大的控件来说，这样的设计思路是不可行的\n//excel正确的设计方式 因该是数据展示层上面，覆盖统一操作层（建议用canvas）作为交互层\nclass ExcelSheet extends React.Component {\n    constructor(props) {\n        super(props)\n\n        //console.log(this.getCoordinates('AA1'));\n        //console.log(initGrid);\n        //console.log(this.props) \n        // this.state = {\n        //     grid: this.props.gridDatas.dic[this.props.gridDatas.selectedKey].grid,\n        // }\n\n        //console.log(this.state)\n    }\n\n\n    //坐标换算\n    //列A-ZZ 行1-n\n    //双字母把A看作1  列在前行在后例如 AA3\n    //返回的坐标index从0开始\n    getCoordinates = (positionStr) => {\n        const row = positionStr.match(/[0-9]+/g) || [];\n        const col = positionStr.match(/[A-Z]+/g) || [];\n\n        if (row.length === 1 && col.length === 1) {\n            let colstr = col[0].toString();\n            let baseCode = 'A'.charCodeAt();\n            let colno = 0;\n            for (let index = 0; index < colstr.length; index++) {\n                const charIdx = colstr[index].charCodeAt() - baseCode + 1;\n                let temp = (Math.pow(26, colstr.length - index - 1) * charIdx)\n                colno += temp;\n            }\n            // x列 y行\n            return { x: colno - 1, y: parseInt(row[0]) - 1 }\n        }\n    }\n\n    //坐标转字符串index 从0开始\n    getPositionStr = (coordinates) => {\n        let baseCode = 'A'.charCodeAt();\n        let x = parseInt(coordinates.x);\n        let x1 = String.fromCharCode(x % 26 + baseCode);\n        do {\n            x = parseInt(x / 26);\n            if (x > 0) {\n                x1 = String.fromCharCode(x % 26 + baseCode - 1) + x1\n            }\n            else\n                break;\n        }\n        while (parseInt(x / 26) > 0)\n        return x1 + (coordinates.y + 1);\n    }\n\n    getPositionStrX = (inputX) => {\n        let baseCode = 'A'.charCodeAt();\n        let x = parseInt(inputX);\n        let x1 = String.fromCharCode(parseInt((x) % 26 + baseCode));\n        do {\n            x = parseInt(x / 26);\n            if (x > 0) {\n                x1 = String.fromCharCode(parseInt(x % 26 + baseCode - 1)) + x1\n            }\n            else\n                break;\n        }\n        while (parseInt(x / 26) > 0)\n        return x1;\n    }\n\n    render() {\n        //console.log(this.props.gridDatas)\n        this.grid = this.props.gridDatas.dic[this.props.gridDatas.selectedKey].grid;\n        //console.log(this.coordinates('BA87'));\n        //console.log(this.getPositionStr({ x: 25, y: 86 }));\n        //console.log(this.getPositionStrX(25));\n        this.totalWidth = this.grid[0].length * 60;\n        this.totalHeight = this.grid.length * 22;\n        //console.log(this.totalHeight)\n        if (this.totalWidth !== this.props.excelSheet.width\n            || this.totalHeight !== this.props.excelSheet.height) {\n            this.props.changedExcelSize({\n                width: this.totalWidth,\n                height: this.totalHeight,\n            })\n        }\n        //console.log(this.props)\n\n        return (\n            <div style={{ width: this.totalWidth }}>\n                <Datasheet\n                    data={this.grid}\n                    valueRenderer={(cell) => cell.value}\n                    onContextMenu={(e, cell, i, j) => cell.readOnly ? e.preventDefault() : null}\n                    onCellsChanged={changes => {\n                        const grid = this.grid.map(row => [...row])\n                        changes.forEach(({ cell, row, col, value }) => {\n                            this.grid[row][col] = { ...grid[row][col], value }\n                        })\n                        this.render()\n                    }}\n                />\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    state => { return ({ gridDatas: state.gridDatas, excelSheet: state.excelSheet }) },\n    { changedExcelSize ,changeExcelSheetSelected}\n)(ExcelSheet);","import React from 'react';\nimport { connect } from 'react-redux'\nimport { logout } from '../../redux/login/actions'\nimport { downloadExcel } from '../../redux/workplace/actions'\n\n\nimport { Dropdown, Menu, Avatar, Button } from 'antd'\n\nimport '../../static/css/user-header.css'\n\nclass UserHeader extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n        //console.log(this.props);\n        this.handleMenuClick = e => {\n            if (e.key === '2') {\n                this.props.logout({});\n                window.open(encodeURI('http://' +window.location.host +'/excel-web'), '_parent');\n            }\n        };\n\n        this.state.downMenu = (\n            <Menu onClick={this.handleMenuClick}>\n                <Menu.Item className='menu-item' key='1' >\n                    {this.props.login.userInfo.username}\n                </Menu.Item>\n                <Menu.Item className='menu-item' key='2' >\n                    Logout\n                </Menu.Item>\n            </Menu>\n        );\n    }\n\n    download = () => {\n        this.props.downloadExcel()\n    }\n\n    render() {\n\n        return (\n            <div className='user-header'>\n                <div className='header-title'>Technology Changes Lives</div>\n                <div className='items'>\n                    <Dropdown overlay={this.state.downMenu} className='item avatar'>\n                        <Avatar size={40} src={this.props.login.userInfo.avatarUrl} className='item avatar'></Avatar>\n                    </Dropdown>\n                    <div className='item split' ></div>\n                    <Button type=\"primary\" icon=\"download\" className='item btn' onClick={this.download}>Download</Button>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    state => state,\n    { logout, downloadExcel }//这里要用大括号，容易遗漏\n)(UserHeader);","import React from 'react';\nimport { connect } from 'react-redux'\nimport { Icon } from 'antd'\n\nimport '../../static/css/tools-header.css'\n\nclass ToolsHeader extends React.Component {\n\n    iconbtn = (type,index) => {\n        return (<div className='item' key={index}><Icon type={type} /></div>)\n    }\n\n    render() {\n        let editTypes = ['edit', 'copy', 'delete', 'align-center', 'align-left', 'align-right',\n            'bg-colors', 'bold', 'italic', 'underline', 'font-colors', 'font-size'];\n        let charts = ['area-chart', 'pie-chart', 'bar-chart', 'dot-chart', 'line-chart','radar-chart','fund'];\n        let editExts = ['line-height','column-width','column-height','sort-ascending','sort-descending'];\n        return (<div className='tools-header'>\n            <div className='item split'></div>\n            {editTypes.map((x, i) => (this.iconbtn(x,i)))}\n            <div className='item split'></div>\n            {charts.map((x, i)=> (<div className='item' key={'chart'+i}><Icon type={x} /></div>))}\n            <div className='item split'></div>\n            {editExts.map((x, i)=> (<div className='item' key={'editExts'+i}><Icon type={x} /></div>))}\n        </div>)\n    }\n}\n\nexport default connect(\n    state => state,\n    {}\n)(ToolsHeader)\n\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { addExcelSheet, removeExcelSheet, changeExcelSheetName, changeExcelSheetSelected } from '../../redux/workplace/actions'\n\nimport { Tabs, Button } from 'antd';\n\nimport '../../static/css/tools-footer.css'\n\nconst { TabPane } = Tabs;\n\nclass ToolsFooter extends React.Component {\n  constructor(props) {\n    super(props);\n\n\n    this.newTabIndex = 0;\n    // const panes = [\n    // ];\n    // for (let dickey in this.props.gridDatas.dic) {\n    //   panes.push({\n    //     title: this.props.gridDatas.dic[dickey].name,\n    //     content: '',\n    //     key: dickey\n    //   })\n    // }\n\n    // this.state = {\n    //   activeKey: this.props.gridDatas.selectedKey,\n    //   panes,\n    // };\n  }\n\n  onChange = activeKey => {\n    //this.setState({ activeKey });\n    this.props.changeExcelSheetSelected({ key: activeKey })\n  };\n\n  onEdit = (targetKey, action) => {\n    //action 包含下面的 add 和 remove\n    this[action](targetKey);\n  };\n\n  add = () => {\n    // const { panes } = this.state;\n    // const activeKey = (new Date().getTime().toString() + parseInt(Math.random() * 100));\n    // const newTitle = `Sheet${this.props.gridDatas.length++}`;\n    // panes.push({ title: 'New Tab', content: '', key: activeKey });\n    // this.setState({ panes, activeKey });\n    this.props.addExcelSheet();\n  };\n\n  remove = targetKey => {\n    // let { activeKey } = this.state;\n    // let lastIndex;\n    // this.state.panes.forEach((pane, i) => {\n    //   if (pane.key === targetKey) {\n    //     lastIndex = i - 1;\n    //   }\n    // });\n    // const panes = this.state.panes.filter(pane => pane.key !== targetKey);\n    // if (panes.length && activeKey === targetKey) {\n    //   if (lastIndex >= 0) {\n    //     activeKey = panes[lastIndex].key;\n    //   } else {\n    //     activeKey = panes[0].key;\n    //   }\n    // }\n    // this.setState({ panes, activeKey });\n    this.props.removeExcelSheet({\n      key: targetKey\n    })\n  };\n\n  render() {\n    //console.log(this.props)\n    this.panes = [];\n    for (let dickey in this.props.gridDatas.dic) {\n      this.panes.push({\n        title: this.props.gridDatas.dic[dickey].name,\n        content: '',\n        key: dickey\n      })\n    }\n    return (\n      <div className='tools-footer'>\n        <Tabs\n          onChange={this.onChange}\n          activeKey={this.props.gridDatas.selectedKey}\n          type=\"editable-card\"\n          onEdit={this.onEdit}\n        >\n          {this.panes.map(pane => (\n            <TabPane tab={pane.title} key={pane.key}>\n              {pane.content}\n            </TabPane>\n          ))}\n        </Tabs>\n      </div>\n    );\n  }\n}\n\n\nexport default connect(\n  state => ({ gridDatas: state.gridDatas }),\n  {\n    addExcelSheet,\n    removeExcelSheet,\n    changeExcelSheetName,\n    changeExcelSheetSelected\n  }\n)(ToolsFooter)\n\n\n\n","import React from 'react';\nimport { Layout } from 'antd';\nimport ExcelSheet from './excel-sheet'\nimport UserHeader from './user-header'\nimport ToolsHeader from './tools-header'\nimport ToolsFooter from './tools-footer'\nimport cookie from 'react-cookies'\nimport { connect } from 'react-redux'\nimport { receiveUserInfo } from '../../redux/login/actions'\nimport { changedExcelSize } from '../../redux/workplace/actions'\n\nimport '../../static/css/main-workplace.css'\n\n\nclass MainWorkplace extends React.Component {\n    constructor(props) {\n        super(props);\n        let loginCookie = cookie.load('loginCookie');\n        if (loginCookie !== undefined) {\n            var jstr = window.atob(loginCookie)\n            let login = JSON.parse(jstr);\n            if (login.userInfo.username !== undefined) {\n                this.props.receiveUserInfo(login);\n            }\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.login.userInfo.username === undefined) {\n            this.props.history.replace('/login')\n        }\n    }\n\n    render() {\n        //console.log(this.props)\n        return (\n            <div className='excel-main'>\n                <div className='tool-header'>\n                    <UserHeader />\n                    <ToolsHeader/>\n                </div>\n                <div className='content-main'>\n                    <div className='excel-container'>\n                        <div className='excel-component'\n                            style={{\n                                width: this.props.excelSheet.width + 300,\n                                height: parseInt(this.props.excelSheet.height) + 300\n                            }}>\n                            <ExcelSheet />\n                        </div>\n                    </div>\n                </div>\n\n                <div className='tool-footer-container'>\n                    <ToolsFooter/>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default connect(\n    state => (state),\n    { receiveUserInfo, changedExcelSize }\n)(MainWorkplace);\n\n","import React from 'react';\nimport MainLogin from './components/login/main-login'\nimport MainWorkplace from './components/workplace/main-workplace'\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport './App.css';\n\n\nclass App extends React.Component {\n  render() {\n    return (< div className=\"App\" >\n      < Switch >\n        < Route path='/excel-web/login' component={MainLogin} />\n        < Route path='/excel-web' component={MainWorkplace} />\n        < Redirect to='/excel-web/login' />\n      </Switch >\n    </div >\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { DINGDING_LOGIN, GITHUB_LOGIN, USER_LOGOUT, RECEIVE_USER_INFO } from './action-types';\nimport cookie from 'react-cookies'\n\n\nconst initState = { userInfo: { errcode: 0 } };\n\nfunction login(state = initState, action) {\n  switch (action.type) {\n    case DINGDING_LOGIN: //login的状态触发由receive完成\n      return state;\n    case GITHUB_LOGIN:\n      return state;\n    case USER_LOGOUT:\n      //删除缓存的额cookie，把状态设置为初始值\n      cookie.remove('loginCookie',{ path: '/' });\n      return { ...initState };\n    case RECEIVE_USER_INFO:\n      let ret = { ...action.data }\n      if (action.data.errcode !== undefined) {\n        ret.userInfo.errcode = action.data.errcode;\n      }\n      else {\n        ret.userInfo.errcode = 0;\n      }\n      //console.log(ret);\n      return { ...ret };\n    default:\n      return { ...state };\n  }\n}\n\nexport default login;","import { CHANGED_EXCEL_SIZE, ADD_EXCEL_SHEET, REMOVE_EXCEL_SHEET, CHANGE_EXCEL_SHEET_NAME } from './action-types'\n\nconst initSize = { width: 0, height: 0 }\n\nconst excelSheet = (state = initSize, action) => {\n    switch (action.type) {\n        case CHANGED_EXCEL_SIZE:\n            return {...action.data }\n        default:\n            return state;\n    }\n}\n\nexport default excelSheet;","import {\n    ADD_EXCEL_SHEET,\n    REMOVE_EXCEL_SHEET,\n    CHANGE_EXCEL_SHEET_NAME,\n    CHANGE_EXCEL_SHEET_SELECTED,\n    DOWNLOAD_EXCEL\n} from './action-types'\n\nimport Excel from 'exceljs';\nimport FileSaver from 'file-saver'\n\nconst getPositionStrX = (inputX) => {\n    let baseCode = 'A'.charCodeAt();\n    let x = parseInt(inputX);\n    let x1 = String.fromCharCode(parseInt((x) % 26 + baseCode));\n    do {\n        x = parseInt(x / 26);\n        if (x > 0) {\n            x1 = String.fromCharCode(parseInt(x % 26 + baseCode - 1)) + x1\n        } else\n            break;\n    }\n    while (parseInt(x / 26) > 0)\n    return x1;\n}\n\nconst getCoordinates = (positionStr) => {\n    const row = positionStr.match(/[0-9]+/g) || [];\n    const col = positionStr.match(/[A-Z]+/g) || [];\n\n    if (row.length === 1 && col.length === 1) {\n        let colstr = col[0].toString();\n        let baseCode = 'A'.charCodeAt();\n        let colno = 0;\n        for (let index = 0; index < colstr.length; index++) {\n            const charIdx = colstr[index].charCodeAt() - baseCode + 1;\n            let temp = (Math.pow(26, colstr.length - index - 1) * charIdx)\n            colno += temp;\n        }\n        // x列 y行\n        return { x: colno - 1, y: parseInt(row[0]) - 1 }\n    }\n}\n\nconst creatBlankGridData = (isTest) => {\n    let initGrid = [];\n    for (let row = 0; row < 60; row++) {\n        initGrid.push([]);\n        for (let col = 0; col < 30; col++) {\n            if (row === 0 && col === 0) {\n                initGrid[0].push({ readOnly: true, value: '' })\n            } else if (row === 0 && col > 0) {\n                let colstr = getPositionStrX(col - 1);\n                initGrid[0].push({ readOnly: true, value: colstr })\n            } else if (row > 0 && col === 0) {\n                initGrid[row].push({ readOnly: true, value: row })\n            } else {\n\n                //坐标验证\n                if (isTest) {\n                    if (row > 0 && col > 0) {\n                        var coor = getCoordinates(initGrid[0][col].value + row)\n                        initGrid[row].push({ value: `(${coor.x}, ${coor.y})` })\n                    }\n                } else {\n                    initGrid[row].push({ value: `` })\n                }\n\n            }\n\n        }\n    }\n    return initGrid;\n}\n\n\nconst download = (dic) => {\n    const wb = new Excel.Workbook();\n\n    //sheet name\n    for (let key in dic) {\n        const ws = wb.addWorksheet(dic[key].name);\n        ws.properties.defaultRowHeight = 16;\n        //这里行列不能搞混\n        let rowcount = dic[key].grid.length;\n        let colcount = dic[key].grid[0].length;\n\n        for (let rowidx = 1; rowidx < rowcount; rowidx++) {\n            for (let colidx = 1; colidx < colcount; colidx++) {\n                let row = ws.getRow(rowidx)\n                if (!row) {\n                    let rowdata = new Array(colcount).fill('');\n                    ws.addRow(rowdata);\n                    row = ws.getRow(rowidx)\n                }\n                row.getCell(colidx).value = dic[key].grid[rowidx][colidx].value;\n            }\n        }\n    }\n\n    //网上的a标签+blob下载的例子会文件损坏，原因不明。\n    wb.xlsx.writeBuffer()\n        .then(buffer => FileSaver.saveAs(new Blob([buffer]), `excel-web${Date.now()}.xlsx`))\n        .catch(err => console.log('Error writing excel export', err))\n}\n\n\nconst getStamp = () => (new Date().getTime().toString() + parseInt(Math.random() * 100))\n\n\n//key name data\nconst initGridDatas = () => {\n\n    //字典\n    let dic = new Array();\n    let key1 = getStamp()\n    dic[key1] = {\n        name: 'Sheet1',\n        grid: creatBlankGridData(false),\n    }\n    dic[getStamp()] = {\n        name: 'Sheet2',\n        grid: creatBlankGridData(true),\n    }\n\n    return {\n        dic,\n        selectedKey: key1,\n        length: 2\n    };\n\n}\nconst blankData = initGridDatas();\n\n//UserHeader绑定\n//sheet模块绑定\n//footer模块绑定\nconst gridDatas = (state = blankData, action) => {\n    switch (action.type) {\n        case ADD_EXCEL_SHEET:\n            let addstate = {...(state) }\n                //let adddic = {...(state.dic) }\n            let nameidx = addstate.length + 1;\n            //sheetname 不能重复，否则download会报错\n            for (let asKey in addstate.dic) {\n                if (addstate.dic[asKey].name === ('Sheet' + nameidx)) {\n                    nameidx++;\n                }\n            }\n            let addkey = getStamp();\n            addstate.dic[addkey] = {\n                grid: creatBlankGridData(),\n                name: 'Sheet' + nameidx\n            };\n            addstate['selectedKey'] = addkey;\n            addstate.length += 1;\n            return addstate;\n        case REMOVE_EXCEL_SHEET:\n            //至少需要存在一张表\n            if (state.length < 2) {\n                return state;\n            }\n            let rmdic = new Array();\n            let wouldSelect = undefined;\n            if (action.data.key !== state.selectedKey) {\n                wouldSelect = state.selectedKey;\n            }\n            let hasRemove = false;\n            for (let key in state.dic) {\n                if (key !== action.data.key) {\n                    rmdic[key] = state.dic[key]\n                    if (!wouldSelect) { wouldSelect = key }\n                    continue;\n                }\n                hasRemove = true;\n            }\n            if (hasRemove) {\n                return {\n                    dic: rmdic,\n                    selectedKey: wouldSelect,\n                    length: state.length - 1\n                };\n            }\n            return state;\n        case CHANGE_EXCEL_SHEET_NAME:\n            let changeState = {...state }\n            if (state[action.data.key]) {\n                changeState.dic[action.data.key].name =\n                    action.data.name;\n                return changeState;\n            }\n            return state;\n        case CHANGE_EXCEL_SHEET_SELECTED:\n            let selectedState = {...state }\n            if (selectedState['selectedKey']) {\n                selectedState['selectedKey'] =\n                    action.data.key;\n                return selectedState;\n            }\n            //console.log(selectedState)\n            return state;\n        case DOWNLOAD_EXCEL:\n            download(state.dic)\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default gridDatas;","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport login from './login/reducers'\nimport excelSheet from './workplace/reducers'\nimport gridDatas from './workplace/reducers-grid-datas'\n\nimport { combineReducers } from 'redux'; //用于合并多个模块的reducers\n\n\n//这里可以模仿eggjs直接把appconfig对象挂载到store上，供全局使用\n\nexport default createStore(\n    combineReducers({ login, excelSheet, gridDatas }),\n    applyMiddleware(thunk) // 应用上异步中间件\n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n//绑定时会默认调用\nimport store from './redux/store'\n\n\nReactDOM.render(\n\n  <Provider store={store}> \n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n\n  ,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}